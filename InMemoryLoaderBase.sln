
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio 2012
VisualStudioVersion = 15.0.27004.2005
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "InMemoryLoaderBase", "InMemoryLoaderBase\InMemoryLoaderBase.csproj", "{55EC3AB9-DA4B-4888-8AA3-513F393FBFB1}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{55EC3AB9-DA4B-4888-8AA3-513F393FBFB1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{55EC3AB9-DA4B-4888-8AA3-513F393FBFB1}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{55EC3AB9-DA4B-4888-8AA3-513F393FBFB1}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{55EC3AB9-DA4B-4888-8AA3-513F393FBFB1}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(MonoDevelopProperties) = preSolution
		Policies = $0
		$0.DotNetNamingPolicy = $1
		$1.DirectoryNamespaceAssociation = Flat
		$0.TextStylePolicy = $2
		$2.scope = application/config+xml
		$2.FileWidth = 80
		$2.TabWidth = 8
		$2.IndentWidth = 8
		$0.XmlFormattingPolicy = $3
		$3.scope = application/config+xml
		$0.StandardHeader = $4
		$0.NameConventionPolicy = $5
		$5.Rules = $6
		$6.NamingRule = $7
		$7.AffectedEntity = None
		$7.VisibilityMask = VisibilityMask
		$7.NamingStyle = None
		$7.IncludeInstanceMembers = True
		$7.IncludeStaticEntities = True
		$0.TextStylePolicy = $8
		$8.scope = text/x-csharp
		$8.FileWidth = 80
		$8.TabsToSpaces = True
		$0.CSharpFormattingPolicy = $9
		$9.IndentSwitchBody = True
		$9.IndentBlocksInsideExpressions = True
		$9.AnonymousMethodBraceStyle = NextLine
		$9.PropertyBraceStyle = NextLine
		$9.PropertyGetBraceStyle = NextLine
		$9.PropertySetBraceStyle = NextLine
		$9.EventBraceStyle = NextLine
		$9.EventAddBraceStyle = NextLine
		$9.EventRemoveBraceStyle = NextLine
		$9.StatementBraceStyle = NextLine
		$9.ElseNewLinePlacement = NewLine
		$9.CatchNewLinePlacement = NewLine
		$9.FinallyNewLinePlacement = NewLine
		$9.WhileNewLinePlacement = DoNotCare
		$9.ArrayInitializerWrapping = DoNotChange
		$9.ArrayInitializerBraceStyle = NextLine
		$9.BeforeMethodDeclarationParentheses = False
		$9.BeforeMethodCallParentheses = False
		$9.BeforeConstructorDeclarationParentheses = False
		$9.NewLineBeforeConstructorInitializerColon = NewLine
		$9.NewLineAfterConstructorInitializerColon = SameLine
		$9.BeforeDelegateDeclarationParentheses = False
		$9.NewParentheses = False
		$9.SpacesBeforeBrackets = False
		$9.scope = text/x-csharp
		$0.TextStylePolicy = $10
		$10.scope = text/plain
		$0.TextStylePolicy = $11
		$11.scope = application/xml
		$11.FileWidth = 80
		$11.TabWidth = 8
		$11.IndentWidth = 8
		$0.XmlFormattingPolicy = $12
		$12.scope = application/xml
		description = @InMemoryLoader ist eine in C# geschriebene Funktionsbibliothek welche das \ndynamische Laden von .NET Assemblies zur Laufzeit ermöglicht.
		version = 1.0.*
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {A48177FB-2F21-4A5C-B3A9-B4EBBFE566B8}
	EndGlobalSection
EndGlobal
