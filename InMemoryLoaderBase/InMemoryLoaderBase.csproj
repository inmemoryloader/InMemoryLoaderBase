<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{55EC3AB9-DA4B-4888-8AA3-513F393FBFB1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>InMemoryLoaderBase</RootNamespace>
    <AssemblyName>InMemoryLoaderBase</AssemblyName>
    <Description>InMemoryLoader ist eine in C# geschriebene Funktionsbibliothek welche das dynamische Laden von .NET Assemblies zur Laufzeit ermöglicht.</Description>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <ReleaseVersion>1.0.*</ReleaseVersion>
    <PackageId>InMemoryLoaderBase</PackageId>
    <PackageVersion>1.0.6669.34528</PackageVersion>
    <Authors>responsive kaysta</Authors>
    <Owners>responsive kaysta</Owners>
    <PackageProjectUrl>https://blog.responsive-kaysta.ch/post/inmemoryloader</PackageProjectUrl>
    <Summary>InMemoryLoader ermöglicht das Laden von .Dll's zur Laufzeit ohne fixe Referenzen in der Solution zu benötigen. Hierbei werden die .Dll’s einmalig geladen und geprüft, in eine Collection geschrieben und zur Laufzeit einmalig instanziiert.</Summary>
    <Title>Im Wesentlichen besteht InMemoryLoader aus zwei nuget-Packages die mit Mono entwickelt wurden und so über Plattformgrenzen hinweg verwendet werden können.</Title>
    <PackOnBuild>false</PackOnBuild>
    <PackageLicenseUrl>https://de.wikipedia.org/wiki/MIT-Lizenz</PackageLicenseUrl>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <WarningLevel>4</WarningLevel>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <LangVersion>Latest</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <WarningLevel>4</WarningLevel>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <LangVersion>Latest</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="log4net">
      <HintPath>..\packages\log4net.2.0.8\lib\net45-full\log4net.dll</HintPath>
    </Reference>
    <Reference Include="System.Xaml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="HelperEnum\DateInterval.cs" />
    <Compile Include="HelperEnum\DateTimeAmPmType.cs" />
    <Compile Include="HelperEnum\FileCompareMethod.cs" />
    <Compile Include="HelperEnum\HashAlgorithmKind.cs" />
    <Compile Include="HelperEnum\StringDirection.cs" />
    <Compile Include="IAbstractComponent.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="AbstractComponent.cs" />
    <Compile Include="IDynamicClassInfo.cs" />
    <Compile Include="IDynamicClassSetup.cs" />
    <Compile Include="DynamicClassInfo.cs" />
    <Compile Include="DynamicClassSetup.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="InMemoryLoaderBase.csproj" />
    <None Include="obj\Debug\InMemoryLoaderBase.csproj.CoreCompileInputs.cache" />
    <None Include="obj\Debug\InMemoryLoaderBase.csproj.FileListAbsolute.txt" />
    <None Include="obj\Debug\InMemoryLoaderBase.csprojAssemblyReference.cache" />
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <DotNetNamingPolicy ResourceNamePolicy="FileFormatDefault" DirectoryNamespaceAssociation="Flat" />
          <TextStylePolicy TabWidth="4" IndentWidth="4" RemoveTrailingWhitespace="True" NoTabsAfterNonTabs="False" EolMarker="Native" FileWidth="80" TabsToSpaces="True" scope="text/x-csharp" />
          <CSharpFormattingPolicy IndentBlock="True" IndentBraces="False" IndentSwitchSection="True" IndentSwitchCaseSection="True" LabelPositioning="OneLess" NewLinesForBracesInTypes="True" NewLinesForBracesInMethods="True" NewLinesForBracesInProperties="True" NewLinesForBracesInAccessors="True" NewLinesForBracesInAnonymousMethods="True" NewLinesForBracesInControlBlocks="True" NewLinesForBracesInAnonymousTypes="True" NewLinesForBracesInObjectCollectionArrayInitializers="True" NewLinesForBracesInLambdaExpressionBody="True" NewLineForElse="True" NewLineForCatch="True" NewLineForFinally="True" NewLineForMembersInObjectInit="True" NewLineForMembersInAnonymousTypes="True" NewLineForClausesInQuery="True" SpacingAfterMethodDeclarationName="False" SpaceWithinMethodDeclarationParenthesis="False" SpaceBetweenEmptyMethodDeclarationParentheses="False" SpaceAfterMethodCallName="False" SpaceWithinMethodCallParentheses="False" SpaceBetweenEmptyMethodCallParentheses="False" SpaceAfterControlFlowStatementKeyword="True" SpaceWithinExpressionParentheses="False" SpaceWithinCastParentheses="False" SpaceWithinOtherParentheses="False" SpaceAfterCast="False" SpacesIgnoreAroundVariableDeclaration="False" SpaceBeforeOpenSquareBracket="False" SpaceBetweenEmptySquareBrackets="False" SpaceWithinSquareBrackets="False" SpaceAfterColonInBaseTypeDeclaration="True" SpaceAfterComma="True" SpaceAfterDot="False" SpaceAfterSemicolonsInForStatement="True" SpaceBeforeColonInBaseTypeDeclaration="True" SpaceBeforeComma="False" SpaceBeforeDot="False" SpaceBeforeSemicolonsInForStatement="False" SpacingAroundBinaryOperator="Single" WrappingPreserveSingleLine="True" WrappingKeepStatementsOnSingleLine="True" PlaceSystemDirectiveFirst="True" scope="text/x-csharp" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
</Project>